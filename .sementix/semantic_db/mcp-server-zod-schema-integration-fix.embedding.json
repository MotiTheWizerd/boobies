{
  "fileName": "mcp-server-zod-schema-integration-fix.json",
  "embedding": [
    0.057883583,
    0.02112316,
    -0.062417496,
    0.016518641,
    0.02560529,
    0.06273698,
    0.045037836,
    -0.006817305,
    -0.043726385,
    0.07112771,
    0.02273419,
    0.06082086,
    0.083545744,
    -0.009482897,
    0.02064597,
    -0.034675337,
    -0.012378038,
    0.053401075,
    -0.02212679,
    0.06096105,
    -0.07681496,
    -0.036184862,
    -0.02447719,
    0.017204763,
    -0.02524188,
    -0.0052422397,
    0.0574154,
    -0.02884655,
    0.005570278,
    -0.024778351,
    0.015142828,
    -0.03172053,
    0.033841416,
    -0.02073465,
    -0.0015937664,
    0.04891395,
    0.025740074,
    0.087282956,
    0.019974716,
    0.009660916,
    -0.037480365,
    0.04407361,
    -0.041790705,
    0.06976316,
    -0.00152967,
    -0.03416286,
    -0.027373282,
    0.0030932184,
    -0.02407542,
    0.028693315,
    0.0143109225,
    -0.03204978,
    -0.07654403,
    0.022141043,
    0.058720235,
    -0.02838303,
    -0.049901348,
    -0.044882048,
    0.051217224,
    0.0023663985,
    -0.04887067,
    -0.051218465,
    0.016124409,
    -0.022354517,
    -0.04528887,
    -0.032669332,
    -0.05088781,
    -0.020912321,
    -0.05541749,
    0.022515303,
    -0.06669215,
    0.041488137,
    -0.04428408,
    -0.024548318,
    0.0052735866,
    -0.023611775,
    0.015613982,
    -0.04958355,
    0.0135106435,
    0.061291866,
    -0.0009965124,
    -0.019959822,
    0.016600488,
    0.02070921,
    -0.030584166,
    0.0070252107,
    0.030122567,
    -0.06468298,
    -0.039139785,
    -0.03041607,
    0.1270788,
    0.023353133,
    -0.04710965,
    -0.063360445,
    0.011375751,
    -0.00061392545,
    -0.053658005,
    -0.08120939,
    -0.0046573514,
    -0.019645855,
    -0.021631246,
    0.02209737,
    -0.049297206,
    -0.07214889,
    0.02070999,
    0.0031094362,
    -0.021691544,
    -0.031991,
    -0.0068407194,
    0.055981483,
    -0.027467394,
    0.08406941,
    0.04358057,
    -0.026993798,
    -0.086249456,
    -0.024973817,
    0.02985938,
    -0.001475939,
    0.03824345,
    0.03500892,
    0.038897306,
    0.02290237,
    -0.008335121,
    0.08373869,
    0.054244652,
    0.013035925,
    0.008458516,
    -0.020157984,
    -0.027649634,
    -0.045505848,
    0.06710592,
    -0.014246638,
    -0.0183263,
    -0.004089177,
    0.006210274,
    -0.01637805,
    0.0389737,
    0.053474788,
    0.036873516,
    0.04468262,
    -0.047808893,
    -0.01739741,
    -0.04211903,
    -0.016170973,
    -0.029169276,
    -0.04585476,
    -0.01339956,
    0.13696294,
    0.02586967,
    0.005930939,
    -0.03643942,
    0.0035624064,
    0.007720099,
    0.04055583,
    -0.06679977,
    -0.02057981,
    -0.015167922,
    -0.015331147,
    -0.0072529647,
    0.03865017,
    -0.0028057913,
    -0.021345152,
    0.027491359,
    0.049220413,
    -0.072771326,
    -0.031304304,
    -0.04762488,
    -0.033652823,
    0.044623394,
    -0.012650807,
    0.000998146,
    -0.0008181819,
    0.0059109256,
    -0.0054257875,
    -0.0090244245,
    0.041940607,
    -0.002908959,
    -0.037950158,
    -0.020129306,
    -0.043618605,
    0.08753647,
    0.028476015,
    0.00403956,
    -0.057350546,
    0.024878416,
    0.020994008,
    -0.008711816,
    0.089107245,
    0.032920185,
    0.049287464,
    0.0035194226,
    0.012435813,
    0.014863153,
    0.0074759265,
    -0.051033717,
    -0.025861634,
    -0.03484491,
    -0.04472172,
    0.00052759075,
    -0.019844837,
    0.06228468,
    -0.02840595,
    -0.004990085,
    -0.049556658,
    -0.02813803,
    0.0046481383,
    -0.004495875,
    -0.016753469,
    0.025995405,
    -0.017434128,
    -0.018181156,
    -0.015520476,
    -0.01922349,
    -0.08722932,
    -0.023713894,
    0.00844434,
    0.069092885,
    0.061623976,
    0.02131892,
    -0.009340593,
    -0.020856999,
    0.024656864,
    -0.03855216,
    0.032164086,
    0.056088626,
    0.033272643,
    -0.061758842,
    -0.020486725,
    -0.066679165,
    -0.033042837,
    -0.00090334594,
    0.04731147,
    -0.042817228,
    0.020470921,
    0.028721446,
    0.118253335,
    0.062424388,
    -0.033548526,
    -0.03662162,
    0.048814308,
    -0.0024711974,
    0.014477973,
    -0.024509631,
    0.035698187,
    0.06477177,
    -0.0045698257,
    0.037696227,
    0.023548277,
    0.039700992,
    -0.057905998,
    0.013800132,
    -0.006867595,
    0.020229565,
    -0.0013934247,
    -0.014868727,
    -0.06128383,
    0.05352838,
    -0.05563166,
    0.02977185,
    0.04746676,
    0.044961143,
    -0.022388536,
    -0.0109789,
    -0.067104064,
    0.011991979,
    -0.043941773,
    -0.02943637,
    -0.090295434,
    0.07752609,
    -0.009860084,
    0.054612767,
    -0.02551061,
    -0.021568764,
    -0.046694517,
    -0.03464884,
    0.033021525,
    -0.009962696,
    -0.01462253,
    -0.02726261,
    -0.003352558,
    -0.005404474,
    -0.0037221613,
    0.03272023,
    -0.0048961714,
    0.020055886,
    -0.057218675,
    -0.026429784,
    0.032386214,
    -0.019151065,
    -0.004188976,
    0.029778872,
    0.045493215,
    -0.030629542,
    -0.055821195,
    -0.02348908,
    0.016376369,
    0.07871312,
    0.00050611154,
    0.02773957,
    -0.002018769,
    0.08238345,
    0.016197596,
    -0.0037238656,
    0.01631879,
    -0.053508084,
    0.028410936,
    -0.02706736,
    -0.028394165,
    0.04017011,
    -0.028895581,
    -0.023035517,
    0.0076874555,
    -0.0359509,
    -0.021190278,
    -0.045836978,
    -0.03022379,
    -0.113318115,
    -0.025456881,
    -0.04325549,
    -0.004624728,
    0.05148746,
    -0.013279097,
    -0.04096185,
    -0.054685466,
    -0.03973645,
    -0.019700525,
    -0.046022687,
    0.030400062,
    0.030840265,
    -0.025117887,
    0.037135642,
    -0.024784297,
    0.029350456,
    -0.0042042974,
    0.031891745,
    0.050370045,
    -0.032576147,
    0.017418496,
    0.052732855,
    -0.005296148,
    -0.012493466,
    -0.0106697185,
    0.010651821,
    0.05271828,
    0.0014196875,
    -0.00031998975,
    0.044176884,
    0.025095323,
    0.007441217,
    0.0035003768,
    0.01114596,
    0.0053602187,
    0.015229807,
    -0.033993438,
    -0.0017513972,
    0.035563882,
    0.016932229,
    -0.061033115,
    -0.012355026,
    -0.013819154,
    -0.04984936,
    -0.0042003174,
    0.024990337,
    0.06016668,
    0.014004937,
    -0.022991844,
    0.0182369,
    0.03153726,
    -0.008842122,
    -0.015703408,
    -0.018254297,
    0.023954017,
    -0.032129966,
    0.06382682,
    -0.027645124,
    -0.02370964,
    -0.06260619,
    0.00084793265,
    -0.0003338329,
    -0.018592773,
    0.016742576,
    0.008520523,
    -0.007831017,
    0.002695215,
    -0.0003122137,
    0.05437421,
    -0.05734851,
    -0.04019091,
    -0.0017504207,
    0.013126784,
    -0.042181548,
    0.083570294,
    -0.00058213546,
    -0.013166357,
    -0.04714658,
    0.010753276,
    -0.03144521,
    0.031296566,
    0.0073370486,
    -0.015614149,
    -0.041341122,
    -0.052775886,
    0.031336844,
    -0.046988774,
    -0.026581196,
    -0.0149104195,
    0.015689481,
    0.015574041,
    0.019779075,
    0.014877737,
    -0.022623213,
    -0.03623269,
    -0.060809057,
    0.02740516,
    0.017830806,
    0.0011610275,
    0.016526245,
    -0.026591398,
    0.020446954,
    0.046976194,
    -0.009253603,
    -0.00046799172,
    0.018342564,
    -0.012954996,
    0.0079420805,
    -0.033112943,
    -0.013725944,
    -0.022276597,
    0.020932695,
    -0.019798692,
    -0.011134332,
    0.039453115,
    -0.008837236,
    0.022434656,
    0.014259187,
    0.037827972,
    0.0061569777,
    -0.03638593,
    0.022333091,
    0.01965786,
    0.014158088,
    0.062225755,
    0.052240316,
    0.009775997,
    0.0037504234,
    0.024212908,
    -0.00370489,
    -0.00031872143,
    -0.011942973,
    -0.003466316,
    -0.026081065,
    0.02219688,
    -0.013698414,
    -0.06886667,
    -0.072448045,
    -0.00030244852,
    -0.05873852,
    0.04102081,
    -0.035770897,
    -0.031434674,
    -0.029287571,
    -0.037676368,
    0.058724727,
    0.013430892,
    -0.067839734,
    -0.035660364,
    -0.05351504,
    0.042990945,
    -0.04310841,
    0.043549158,
    -0.002325292,
    -0.0010945485,
    0.014245985,
    0.009418637,
    -0.032596122,
    0.027386462,
    -0.0046278816,
    0.003264189,
    0.002136309,
    0.0026411796,
    -0.023556637,
    0.03237218,
    -0.039700694,
    0.022190815,
    -0.016959684,
    -0.03387888,
    -0.0014892794,
    -0.0033193252,
    -0.017696146,
    -0.028967652,
    -0.02467195,
    -0.014000577,
    -0.013312255,
    -0.012040382,
    -0.016729575,
    -0.02622375,
    0.038970914,
    0.024472238,
    0.01354268,
    0.056534156,
    0.036193617,
    0.005324606,
    -0.0035380588,
    -0.061726887,
    -0.0050545814,
    0.0048763645,
    -0.039887514,
    0.008268297,
    0.055430364,
    0.01823334,
    0.039495785,
    -0.021722507,
    -0.016955262,
    -0.037131004,
    0.0021057904,
    0.023084212,
    -0.03799392,
    -0.003617975,
    -0.021968484,
    0.026440496,
    -0.08027375,
    0.0019796747,
    -0.0056998683,
    0.02651546,
    -0.034165114,
    -0.027188221,
    -0.01491848,
    0.016242614,
    0.037678834,
    -0.018316412,
    -0.028334372,
    0.057706434,
    0.01488726,
    0.009039462,
    -0.015836231,
    0.057266884,
    0.021403933,
    0.01788018,
    0.04115006,
    0.030788278,
    -0.008213726,
    -0.03443017,
    -0.0068789492,
    0.03886373,
    0.034920566,
    -0.034160342,
    0.0144976145,
    0.06178173,
    0.007023065,
    0.071126685,
    -0.049231037,
    0.052261386,
    0.031811837,
    0.03799883,
    -0.0049436633,
    0.03371524,
    -0.04935373,
    0.017117975,
    0.015398656,
    0.028574543,
    0.068014435,
    -0.028857872,
    -0.06738879,
    0.019570103,
    -0.018608408,
    -0.022901213,
    -0.010272281,
    0.064786546,
    -0.0401126,
    -0.0016126586,
    -0.022312142,
    -0.027964607,
    0.038531814,
    0.0034531944,
    -0.0029954284,
    -0.026062166,
    0.007107099,
    0.00065006764,
    -0.019125758,
    0.025993392,
    -0.0032773549,
    0.058848582,
    0.06850884,
    0.0040438664,
    0.01923903,
    0.027845845,
    -0.04189347,
    0.00039687674,
    -0.060414802,
    0.007761855,
    -0.019996377,
    0.011017411,
    0.03091828,
    -0.06965273,
    -0.026601303,
    -0.0068300692,
    -0.025638279,
    -0.01142168,
    -0.0015819065,
    -0.08688242,
    0.016816473,
    -0.020378899,
    0.035406362,
    0.01101192,
    -0.026279587,
    -0.020265201,
    -0.0228028,
    -0.027336126,
    -0.020833312,
    0.0058616255,
    0.014450128,
    0.062326435,
    0.0036809088,
    -0.042452578,
    -0.04229865,
    0.025981296,
    -0.041965082,
    -0.012869155,
    0.038318172,
    0.036237624,
    0.010713352,
    -0.03856268,
    0.0020958814,
    0.013838916,
    0.0047762794,
    -0.0027709513,
    0.020083757,
    -0.020495405,
    0.090804555,
    0.016800417,
    -0.014621243,
    -0.0029828427,
    -0.002433443,
    -0.023621844,
    -0.0059705405,
    -0.02465879,
    -0.014459719,
    0.01947564,
    0.019646049,
    -0.057559934,
    0.05284958,
    0.011717172,
    0.0494249,
    -0.061501704,
    -0.008144215,
    0.023789296,
    -0.018017782,
    -0.022050744,
    0.02621883,
    0.01171015,
    0.015066568,
    0.0579115,
    -0.021124538,
    0.045481972,
    -0.031378455,
    0.00008842248,
    -0.058999583,
    -0.02385172,
    0.0298895,
    -0.043079723,
    0.023562841,
    -0.0050609387,
    -0.07969448,
    0.062427126,
    0.009825455,
    0.02126394,
    -0.045280047,
    0.01423488,
    -0.0038897109,
    -0.08409177,
    -0.013328318,
    0.072055876,
    -0.02477732,
    0.03817339,
    0.0014397366,
    -0.024784222,
    0.025618512,
    -0.006242273,
    -0.0074621127,
    0.04842838,
    0.010262815,
    -0.036428295,
    0.022233257,
    0.018976621,
    0.0041986485,
    0.040342577,
    0.042581722,
    -0.03973388,
    -0.01814366,
    0.016309818,
    -0.034466933,
    -0.048202034,
    -0.031736206,
    0.011946886,
    -0.0101647,
    0.044056114,
    -0.0053622313,
    0.03791128,
    -0.060645677,
    0.0071079037,
    0.00046244892,
    -0.032087225,
    -0.002140484,
    0.002802342,
    0.06599591,
    -0.003086032,
    0.039883975,
    0.06271691,
    -0.031946372,
    -0.008006764,
    0.00022637876,
    0.028042596,
    0.078366295,
    -0.01111774,
    -0.012635006,
    0.012338964,
    0.025576845,
    0.014997103,
    0.035180412,
    0.005941367,
    0.019584345,
    0.023458013,
    0.014706542,
    0.0187756,
    0.03862598,
    0.009443693,
    -0.0013005799,
    -0.012167641,
    -0.0091012,
    0.00565818,
    0.046492416,
    0.013723096,
    -0.09471167,
    0.052378844,
    -0.02633623,
    0.009269803,
    0.011402905,
    -0.02707409,
    -0.06031689,
    -0.02974339,
    0.04843256,
    -0.04608051,
    -0.054038182,
    -0.0041602817,
    -0.0021507742,
    0.060209196,
    0.032795504,
    0.020499885,
    -0.037873644,
    -0.0055148364,
    -0.034421567,
    -0.06262572,
    -0.019957194,
    0.0017980785,
    0.02384262,
    0.017144121,
    -0.013299822,
    0.028775074,
    0.020886058,
    -0.0034075803,
    0.014468215,
    0.05254704,
    -0.008203524,
    -0.034171153,
    -0.002606397,
    -0.03296884,
    0.055087265,
    0.005515642
  ],
  "metadata": {
    "task": "mcp-server-zod-schema-integration-fix",
    "agent": "claude-sonnet-4-5",
    "date": "2025-09-30",
    "component": "mcp-server",
    "complexity": {
      "technical": "2: Schema format mismatch between Zod and MCP SDK expectations, simple fix once understood",
      "business": "4: Critical blocker preventing Claude from accessing Sementix semantic memory search - without this, the entire MCP integration is non-functional",
      "coordination": "1: Single file fix after identifying root cause from SDK documentation"
    },
    "files_modified": "2",
    "files_touched": [
      "src/ext/modules/mcp-server/tools/schemas/MemorySearchSchema.ts",
      "src/ext/modules/mcp-server/core/MCPServerInitializer.ts"
    ],
    "tests_added": "0",
    "related_tasks": [
      "mcp-server-architecture-planning-failure"
    ],
    "outcomes": {
      "performance_impact": "No impact - fix enables functionality that was broken",
      "test_coverage_delta": "0%",
      "technical_debt_reduced": "high",
      "follow_up_needed": "false"
    },
    "summary": "MCP tool call failed with 'keyValidator._parse is not a function' error → Fixed by passing Zod schema objects directly instead of wrapping in JSON Schema structure",
    "root_cause": "Misunderstanding of MCP SDK's registerTool() API. Initially wrapped Zod validators in JSON Schema format ({ type: 'object', properties: {...} }), but SDK expects raw Zod schema object ({ query: z.string(), limit: z.number() }) directly",
    "solution": {
      "approach": "Read MCP SDK README.md examples, discovered correct schema format, removed JSON Schema wrapper and passed Zod objects directly",
      "key_changes": [
        "MemorySearchSchema.ts: Changed from { type: 'object', properties: { query: z.string()... } } to { query: z.string(), limit: z.number().optional() } - pass Zod schema object directly",
        "MCPServerInitializer.ts: Changed from inputSchema: def.inputSchema.properties to inputSchema: def.inputSchema - no property unwrapping needed",
        "MCPTypes.ts: Changed ToolDefinition.inputSchema from structured JSON Schema type to Record<string, any> to accept Zod objects"
      ]
    },
    "validation": "SUCCESS - Called mcp__sementix-memory__search_memory tool, received expected placeholder response: 'Searched for: refactoring patterns'",
    "gotchas": [
      {
        "issue": "MCP SDK registerTool() error 'keyValidator._parse is not a function' when passing Zod validators wrapped in JSON Schema format. SDK documentation was unclear about whether to use JSON Schema or Zod schemas",
        "solution": "Read node_modules/@modelcontextprotocol/sdk/README.md which shows examples like: inputSchema: { city: z.string() }, { a: z.number(), b: z.number() }. The SDK expects raw Zod schema objects, NOT JSON Schema wrappers. Pass Zod validators directly as object properties",
        "category": "integration",
        "severity": "high"
      },
      {
        "issue": "Initial assumption was that MCP SDK would handle both JSON Schema and Zod transparently. This is wrong - SDK has specific expectations for schema format based on which API you use (registerTool uses Zod, low-level Server uses JSON Schema)",
        "solution": "When using McpServer.registerTool(), ALWAYS use Zod schemas directly: { param: z.string() }. Do NOT wrap in JSON Schema structure. Only use JSON Schema when using low-level Server class with setRequestHandler()",
        "category": "architecture",
        "severity": "medium"
      },
      {
        "issue": "TypeScript types for inputSchema were too restrictive, initially defined as { type: string; properties: Record<string, any>; required?: string[] } which prevented passing Zod objects",
        "solution": "Changed ToolDefinition.inputSchema to Record<string, any> to accept Zod schema objects. Type safety comes from Zod itself, not TypeScript interface",
        "category": "typing",
        "severity": "low"
      }
    ],
    "lesson": "MCP SDK has TWO different APIs with different schema expectations: (1) McpServer.registerTool() expects Zod schemas as plain objects { key: z.type() }, (2) Low-level Server.setRequestHandler() expects JSON Schema format. Always check SDK README examples before implementing - don't assume API behavior. The 'keyValidator._parse is not a function' error specifically means you're passing Zod objects where JSON Schema is expected OR wrapping Zod in JSON Schema where raw Zod is expected.",
    "tags": [
      "mcp-server",
      "zod-schema",
      "json-schema",
      "integration-fix",
      "registerTool",
      "schema-validation",
      "api-documentation",
      "keyValidator-error"
    ],
    "code_context": {
      "key_patterns": [
        "McpServer.registerTool(name, { inputSchema: { param: z.string() } }, handler) - Use raw Zod objects",
        "Server.setRequestHandler('tools/call', ...) - Low-level API uses JSON Schema, not Zod",
        "z.string().describe('...') - Zod's describe() method adds description to schema",
        "z.number().optional().default(5) - Chain Zod validators for optional params with defaults"
      ],
      "api_surface": [
        "MemorySearchSchema.getDefinition(): ToolDefinition - Returns { name, description, inputSchema: { query: z.string(), limit: z.number() } }",
        "MCPServerInitializer.setupTools(): void - Iterates definitions and calls server.registerTool() with correct schema format",
        "server.registerTool(name, config, handler) - MCP SDK method that expects Zod schemas in config.inputSchema"
      ],
      "dependencies_added": [
        "zod: Provides z.string(), z.number() schema validators used by MCP SDK"
      ],
      "breaking_changes": [
        "ToolDefinition.inputSchema type changed from JSON Schema structure to Record<string, any> to support Zod objects"
      ]
    },
    "future_planning": {
      "next_logical_steps": [
        "Wire up real semantic search by integrating MemoryService with BasicEmbeddingService",
        "Load memory JSONs from .sementix/memories/delta/ and generate embeddings",
        "Implement cosine similarity search to return actual relevant memories",
        "Add result formatting to show memory filename, similarity score, and relevant excerpts",
        "Test with real queries like 'refactoring patterns', 'ultra-modular', 'gotchas'",
        "Add caching to avoid regenerating embeddings on every server start"
      ],
      "architecture_decisions": {
        "zod-over-json-schema": "Use Zod schemas with McpServer.registerTool() for type safety and automatic validation. Zod provides better developer experience than hand-writing JSON Schema",
        "record-any-for-inputschema": "Using Record<string, any> for inputSchema type allows flexibility for Zod objects while maintaining TypeScript compilation. Type safety comes from Zod runtime validation",
        "check-sdk-readme-first": "ALWAYS read node_modules/@package/sdk/README.md for canonical examples before implementing. Documentation websites may be outdated or incomplete"
      },
      "extension_points": [
        "MemoryService.search(): Current placeholder - replace with BasicEmbeddingService integration",
        "Add more tools: search_by_complexity, search_by_tags, get_gotchas, get_lessons",
        "Enhance schema with filters: tags[], complexityRange: [min, max], dateRange: [start, end]"
      ]
    },
    "user_context": {
      "development_style": "iterative-debugging-with-documentation-reading",
      "naming_preferences": "descriptive-clear-search_memory-not-abbreviated",
      "architecture_philosophy": "start-simple-prove-works-then-enhance",
      "quality_standards": "working-end-to-end-before-optimization"
    },
    "semantic_context": {
      "domain_concepts": [
        "mcp-protocol",
        "tool-registration",
        "schema-validation",
        "zod-schemas",
        "json-schema",
        "semantic-memory-search"
      ],
      "technical_patterns": [
        "zod-validation",
        "mcp-tool-registration",
        "stdio-transport",
        "schema-definition-separation"
      ],
      "integration_points": [
        "claude-code-mcp-client",
        "modelcontextprotocol-sdk",
        "zod-validator",
        "basic-embedding-service-future"
      ]
    }
  },
  "timestamp": "2025-09-30T22:59:54.781Z",
  "embeddingText": "mcp-server-zod-schema-integration-fix MCP tool call failed with 'keyValidator._parse is not a function' error → Fixed by passing Zod schema objects directly instead of wrapping in JSON Schema structure Misunderstanding of MCP SDK's registerTool() API. Initially wrapped Zod validators in JSON Schema format ({ type: 'object', properties: {...} }), but SDK expects raw Zod schema object ({ query: z.string(), limit: z.number() }) directly Read MCP SDK README.md examples, discovered correct schema format, removed JSON Schema wrapper and passed Zod objects directly MemorySearchSchema.ts: Changed from { type: 'object', properties: { query: z.string()... } } to { query: z.string(), limit: z.number().optional() } - pass Zod schema object directly MCPServerInitializer.ts: Changed from inputSchema: def.inputSchema.properties to inputSchema: def.inputSchema - no property unwrapping needed MCPTypes.ts: Changed ToolDefinition.inputSchema from structured JSON Schema type to Record<string, any> to accept Zod objects MCP SDK has TWO different APIs with different schema expectations: (1) McpServer.registerTool() expects Zod schemas as plain objects { key: z.type() }, (2) Low-level Server.setRequestHandler() expects JSON Schema format. Always check SDK README examples before implementing - don't assume API behavior. The 'keyValidator._parse is not a function' error specifically means you're passing Zod objects where JSON Schema is expected OR wrapping Zod in JSON Schema where raw Zod is expected. MCP SDK registerTool() error 'keyValidator._parse is not a function' when passing Zod validators wrapped in JSON Schema format. SDK documentation was unclear about whether to use JSON Schema or Zod schemas Read node_modules/@modelcontextprotocol/sdk/README.md which shows examples like: inputSchema: { city: z.string() }, { a: z.number(), b: z.number() }. The SDK expects raw Zod schema objects, NOT JSON Schema wrappers. Pass Zod validators directly as object properties Initial assumption was that MCP SDK would handle both JSON Schema and Zod transparently. This is wrong - SDK has specific expectations for schema format based on which API you use (registerTool uses Zod, low-level Server uses JSON Schema) When using McpServer.registerTool(), ALWAYS use Zod schemas directly: { param: z.string() }. Do NOT wrap in JSON Schema structure. Only use JSON Schema when using low-level Server class with setRequestHandler() TypeScript types for inputSchema were too restrictive, initially defined as { type: string; properties: Record<string, any>; required?: string[] } which prevented passing Zod objects Changed ToolDefinition.inputSchema to Record<string, any> to accept Zod schema objects. Type safety comes from Zod itself, not TypeScript interface mcp-server zod-schema json-schema integration-fix registerTool schema-validation api-documentation keyValidator-error"
}