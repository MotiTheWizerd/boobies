{
  "fileName": "auto-loading-icon-system.json",
  "embedding": [
    0.011949301,
    -0.00819525,
    -0.020087402,
    -0.025460351,
    0.020128578,
    0.028374942,
    0.041242797,
    0.020673495,
    -0.010696759,
    0.007256665,
    0.012575198,
    0.016544243,
    0.0654584,
    -0.011904116,
    -0.0016280751,
    -0.015201555,
    0.021301836,
    0.022406774,
    0.0029151987,
    -0.024930742,
    -0.006237713,
    -0.026232142,
    -0.037489418,
    -0.0022968126,
    -0.043893814,
    -0.025131522,
    -0.0060969363,
    -0.0060583153,
    0.030318407,
    -0.008091906,
    0.019942451,
    0.033279803,
    0.036861878,
    -0.0453738,
    -0.019974422,
    0.03185858,
    0.012454749,
    0.031694796,
    0.02627925,
    -0.030155173,
    -0.09778139,
    0.021386046,
    -0.043762516,
    0.027178736,
    0.02654066,
    0.07506829,
    0.015701838,
    0.05513302,
    -0.017974934,
    0.03822799,
    0.041783538,
    -0.03996942,
    -0.04846656,
    0.0088738,
    -0.013646049,
    0.010456731,
    -0.04291496,
    0.0015447391,
    0.045585115,
    0.013383359,
    -0.045225296,
    0.00025669127,
    -0.023449305,
    -0.044238,
    0.0033448515,
    -0.014455918,
    -0.0533544,
    -0.032671798,
    0.025496518,
    -0.0014413741,
    -0.052054346,
    0.07918427,
    -0.07712774,
    0.009433743,
    -0.007864161,
    0.022857945,
    0.022475107,
    -0.02430826,
    0.016311435,
    -0.02023327,
    -0.004796432,
    0.040770505,
    0.00425383,
    0.013101384,
    0.03079296,
    -0.004392238,
    -0.016872924,
    -0.013996252,
    -0.048882578,
    0.028319467,
    0.10972779,
    0.023991155,
    -0.0057271384,
    0.008419759,
    0.06564367,
    -0.027052376,
    -0.028633675,
    -0.07232482,
    0.054013036,
    0.05053869,
    -0.0099548185,
    -0.030367002,
    -0.039171085,
    -0.056171555,
    0.04960654,
    -0.0087352265,
    -0.057110928,
    -0.074324846,
    -0.082246765,
    0.044690397,
    -0.006292695,
    0.016543075,
    0.009922547,
    -0.0025593603,
    -0.05516994,
    -0.063341774,
    0.0016626633,
    0.025932709,
    0.040079534,
    -0.016864782,
    0.0051246453,
    0.012899533,
    -0.008626008,
    0.08216991,
    0.041970614,
    0.040918645,
    0.019400185,
    -0.019576387,
    -0.023179784,
    -0.045662437,
    0.035481557,
    -0.04204739,
    -0.023298407,
    0.006082359,
    -0.029583182,
    -0.04172505,
    0.011608208,
    -0.0036844036,
    0.117330596,
    0.09154012,
    -0.035132177,
    -0.049466368,
    -0.06952307,
    -0.0121028,
    0.01055322,
    0.010454533,
    -0.014141036,
    0.05768687,
    -0.014205625,
    0.009002114,
    -0.058141716,
    0.027085409,
    -0.0021444717,
    0.038818214,
    -0.033954974,
    -0.0138569325,
    0.005200267,
    -0.03064848,
    0.029984158,
    0.018951045,
    -0.0386524,
    -0.015568953,
    -0.009058431,
    0.06393491,
    0.01910612,
    -0.0037785748,
    -0.022884559,
    0.03354599,
    0.04244196,
    0.005586989,
    0.013891134,
    -0.004041087,
    -0.0821646,
    -0.023973329,
    -0.059023313,
    -0.002495619,
    0.011339089,
    -0.0032868625,
    -0.037501886,
    -0.08227912,
    0.08770179,
    0.067039944,
    -0.031786416,
    -0.1349446,
    0.061666984,
    -0.015185068,
    -0.07014006,
    0.02522359,
    0.060546633,
    0.032579217,
    -0.009353926,
    0.030871902,
    0.024147172,
    -0.02637683,
    -0.06722677,
    -0.036427457,
    0.069703765,
    -0.004964646,
    -0.04301881,
    -0.018440109,
    0.0472533,
    -0.009111927,
    -0.029376607,
    -0.045011133,
    -0.0032424207,
    -0.009014069,
    -0.01256669,
    -0.028333,
    -0.0028215263,
    0.014129725,
    -0.021655207,
    -0.028096428,
    0.0047183535,
    -0.05589222,
    -0.0003400485,
    0.007321849,
    0.0044997483,
    0.005264773,
    0.07689267,
    -0.048771963,
    -0.013058911,
    -0.0030035034,
    0.05160704,
    -0.005025963,
    0.041623488,
    0.08423373,
    -0.029948592,
    -0.0037307325,
    0.018908843,
    -0.030798977,
    0.027970238,
    0.06183749,
    -0.031766437,
    0.006940643,
    0.0017555421,
    0.03775708,
    0.04423198,
    -0.076715365,
    -0.031038586,
    0.051931594,
    -0.041907318,
    0.05688072,
    0.006026977,
    -0.055332206,
    0.043832585,
    -0.03877092,
    0.0063942466,
    0.011936092,
    0.04732447,
    -0.024473088,
    0.033192154,
    0.017395774,
    -0.01563765,
    0.015377713,
    -0.067096174,
    -0.021915097,
    0.056508023,
    -0.020089358,
    0.016741266,
    -0.035700805,
    0.059188195,
    -0.048328225,
    -0.03222757,
    -0.06658332,
    -0.041750643,
    -0.02745993,
    0.00996554,
    -0.018491462,
    0.04110958,
    -0.015472355,
    0.047011916,
    -0.024513844,
    -0.05605396,
    -0.022235874,
    -0.040387403,
    0.0002069978,
    -0.060682625,
    0.038320355,
    -0.0064737555,
    -0.019667475,
    0.07037128,
    -0.04074048,
    0.06038467,
    -0.027218742,
    -0.0005882587,
    -0.04230373,
    -0.057031136,
    0.037057713,
    -0.009928253,
    -0.029877951,
    0.020319948,
    0.008688234,
    -0.02352036,
    -0.07778753,
    0.00001587356,
    0.008001968,
    0.01510519,
    0.0318156,
    0.035686467,
    -0.054079283,
    0.062385432,
    0.035486452,
    -0.030779004,
    0.05645468,
    0.0028287745,
    0.06249,
    -0.02226117,
    -0.0015399624,
    -0.010415897,
    0.015241376,
    -0.007847934,
    -0.04090274,
    0.014675555,
    -0.039051265,
    -0.021757217,
    -0.0026988257,
    -0.15578176,
    -0.056375466,
    -0.06635113,
    0.0022364105,
    0.029323796,
    0.07494912,
    -0.017598752,
    -0.013805631,
    -0.02893906,
    -0.0066952943,
    0.015326431,
    -0.0055505754,
    -0.0014586127,
    -0.013403067,
    0.025375988,
    -0.019447526,
    0.034163363,
    -0.050706502,
    0.07205196,
    0.053260043,
    -0.020571133,
    0.03937454,
    0.028666718,
    0.041346934,
    -0.007684183,
    -0.002292464,
    0.029042302,
    0.019811878,
    -0.01367884,
    -0.07054791,
    0.011956337,
    0.064657934,
    0.026771182,
    0.03233745,
    -0.008722744,
    -0.0047024596,
    -0.002305244,
    0.03584982,
    0.00195943,
    -0.02137441,
    0.0035543132,
    -0.042383656,
    0.060432076,
    0.0024505262,
    0.02122528,
    0.01726437,
    -0.013523506,
    0.06322173,
    0.038713496,
    0.0095563615,
    0.025842784,
    0.039488688,
    0.011919856,
    0.029120266,
    0.000050358143,
    0.0037847827,
    -0.03516349,
    0.058891583,
    0.013575056,
    -0.015321904,
    -0.030294174,
    0.0035482503,
    0.044251714,
    -0.030070849,
    -0.014251594,
    -0.027745811,
    -0.008992565,
    0.044550493,
    0.024225838,
    0.061919186,
    -0.037611548,
    0.022236072,
    0.038714528,
    -0.016263347,
    -0.070281245,
    0.027912231,
    0.029427333,
    0.02994497,
    0.012143428,
    -0.012831245,
    -0.022746066,
    0.08536695,
    0.03818809,
    0.02109116,
    -0.016147766,
    0.0013273457,
    0.0023730076,
    -0.023421844,
    0.011629189,
    -0.032199625,
    0.03506459,
    0.060451094,
    -0.006574481,
    -0.029483268,
    -0.01091661,
    -0.009222576,
    0.018620268,
    0.035695292,
    -0.04091519,
    0.013239983,
    0.008968224,
    -0.006127023,
    -0.050165307,
    -0.011551231,
    -0.00051582954,
    -0.029444309,
    -0.031715393,
    -0.012644388,
    -0.0271642,
    -0.048823405,
    -0.0059638284,
    -0.061039288,
    0.035651803,
    -0.05173755,
    0.0034916038,
    0.032703724,
    -0.060237225,
    0.013009592,
    0.007471705,
    0.011902018,
    -0.020511113,
    -0.006031,
    0.030594852,
    0.0059727915,
    0.025819285,
    -0.012413772,
    0.07548455,
    0.012791709,
    -0.026989736,
    0.032706656,
    -0.020807208,
    0.008494573,
    0.018169498,
    -0.019171884,
    -0.032536734,
    -0.024667105,
    -0.081711076,
    -0.058160774,
    -0.083580665,
    0.032770533,
    -0.037239376,
    0.057767354,
    0.032290272,
    -0.10054498,
    -0.053812493,
    -0.027242105,
    0.01692875,
    0.0060805934,
    0.014604768,
    -0.026009332,
    -0.047225997,
    0.027315231,
    0.0036593254,
    -0.004893824,
    0.04450567,
    0.021539982,
    0.029397663,
    -0.010249698,
    0.0211969,
    0.009586282,
    -0.051166758,
    0.06092362,
    0.015367721,
    0.020885728,
    -0.010597285,
    0.001241924,
    0.048943017,
    -0.0051301788,
    0.0354606,
    -0.073352486,
    -0.04519107,
    -0.001499891,
    -0.00025410403,
    -0.059731424,
    0.021381307,
    -0.036756694,
    -0.0066458904,
    -0.057149295,
    -0.008736887,
    -0.005477535,
    0.05590595,
    0.017846048,
    -0.02140507,
    0.045664746,
    0.028254997,
    0.05464805,
    -0.0031603936,
    -0.03218828,
    0.00044866945,
    0.033632327,
    -0.025578326,
    0.0100488085,
    0.10122335,
    0.047032107,
    0.059800867,
    -0.031660374,
    0.0082987435,
    -0.006647235,
    -0.044556014,
    0.05603047,
    -0.04323996,
    -0.00945452,
    -0.008965867,
    -0.03690766,
    -0.043538142,
    -0.004019638,
    -0.009186759,
    -0.049101215,
    -0.02824221,
    0.032969132,
    -0.010996967,
    -0.027931241,
    0.019386785,
    0.011539913,
    0.0033316032,
    0.05987719,
    0.008294536,
    -0.01796625,
    -0.00846429,
    0.04431409,
    0.020880634,
    -0.023288324,
    0.030027816,
    0.003974477,
    -0.009057937,
    0.009426685,
    0.0017092507,
    0.0453617,
    0.0305685,
    0.01282583,
    -0.038128857,
    0.04985727,
    0.0040400554,
    0.01786131,
    -0.03542131,
    -0.023603687,
    -0.013494809,
    0.056192063,
    -0.023826715,
    -0.025248727,
    -0.014637637,
    -0.022077236,
    0.019711813,
    0.012620635,
    -0.012292754,
    -0.03648181,
    -0.031640247,
    -0.012258455,
    -0.0236243,
    -0.04876513,
    -0.015059008,
    0.026479807,
    -0.0050831893,
    -0.009284929,
    0.04692878,
    -0.032596022,
    0.03518623,
    -0.007896832,
    0.015673084,
    -0.014609079,
    0.006951852,
    0.0137320375,
    0.061735954,
    0.031949878,
    0.049500227,
    -0.015394421,
    0.090946324,
    0.06719884,
    -0.008186755,
    -0.028820584,
    -0.025684085,
    0.033582866,
    0.021613361,
    0.017820824,
    0.046113785,
    -0.009082588,
    0.017226454,
    -0.0614845,
    -0.0021316526,
    -0.0549997,
    0.011199551,
    0.047085594,
    -0.01360961,
    -0.040848315,
    -0.009446363,
    0.0005851917,
    0.056231268,
    0.002559234,
    -0.0074165645,
    -0.05425623,
    -0.023887116,
    -0.043625783,
    0.012681407,
    0.04808313,
    0.009147455,
    0.0441177,
    -0.011940719,
    -0.06090466,
    -0.048405327,
    0.028607082,
    -0.05392879,
    -0.037132297,
    0.012792558,
    0.043427818,
    0.011711881,
    0.008821777,
    -0.002963866,
    0.018560993,
    -0.037260193,
    0.016333986,
    0.021342747,
    0.018895354,
    0.027565025,
    0.01764848,
    0.00022035989,
    0.014065269,
    0.019011313,
    -0.015419872,
    -0.03180508,
    -0.029463263,
    0.028832998,
    0.031587627,
    -0.027543599,
    -0.07979854,
    0.030153474,
    0.019016983,
    0.051880665,
    0.032910917,
    -0.010465697,
    0.064837284,
    -0.007426272,
    -0.010955479,
    0.024526685,
    0.034016307,
    -0.061792366,
    0.024301214,
    -0.005110827,
    -0.001122115,
    -0.051952578,
    -0.010356761,
    0.021609358,
    0.014116023,
    -0.021759514,
    -0.00066412345,
    -0.018746119,
    -0.016118268,
    -0.039356533,
    0.035497464,
    -0.044947486,
    -0.010813452,
    -0.04180529,
    0.016805917,
    0.0067119584,
    -0.009467924,
    -0.02050433,
    0.0761571,
    0.010604257,
    0.028651593,
    0.012506775,
    -0.015735233,
    -0.0143099185,
    0.01588772,
    -0.026337814,
    0.010164789,
    -0.0005888106,
    -0.03848654,
    0.04774184,
    0.006483401,
    0.04447948,
    0.025915172,
    0.01860721,
    0.009420118,
    -0.024858296,
    0.0022188537,
    0.0076016136,
    0.0119952215,
    -0.037912436,
    -0.020305954,
    -0.0040886155,
    -0.04227223,
    -0.021963898,
    0.015965926,
    -0.052838475,
    0.00073792436,
    -0.03946539,
    0.020828057,
    -0.038827263,
    -0.0077699316,
    0.024197176,
    -0.014843979,
    0.04563578,
    0.006004162,
    0.026703844,
    -0.027860252,
    -0.035833884,
    0.0384477,
    0.025994178,
    0.046402276,
    -0.024970172,
    -0.005677702,
    0.0031283863,
    0.021587048,
    0.04166646,
    -0.028501242,
    0.0013626833,
    -0.021175865,
    0.042709984,
    0.0087989615,
    0.03988151,
    0.01964476,
    -0.013001438,
    -0.011373776,
    -0.0014386135,
    0.028380446,
    -0.0077735893,
    -0.010098803,
    -0.03033568,
    0.049762487,
    -0.018297229,
    -0.0043245675,
    -0.027886987,
    0.0054284306,
    -0.039364725,
    -0.01862996,
    0.013611224,
    -0.0120421015,
    -0.06547501,
    -0.014122979,
    -0.029345645,
    -0.028810812,
    0.002321383,
    0.015562585,
    -0.0573116,
    -0.02139886,
    -0.12338326,
    -0.06393284,
    -0.008744391,
    0.022873731,
    -0.029275168,
    -0.028555106,
    0.034417022,
    -0.04431038,
    -0.02069076,
    0.01213663,
    -0.06387213,
    0.004947161,
    -0.03774336,
    -0.0077678678,
    -0.013931765,
    -0.055961255,
    -0.02126276,
    0.029130526
  ],
  "metadata": {
    "task": "auto-loading-icon-system",
    "agent": "claude-sonnet-4",
    "date": "2025-09-30",
    "component": "icon-asset-system",
    "complexity": {
      "technical": "4: Filesystem I/O with VS Code webview security, automatic URI generation, dynamic JS injection, and camelCase filename transformation",
      "business": "5: Eliminates manual icon management - foundational system enabling scalable icon usage across entire UI without ResourceManager modifications",
      "coordination": "3: Touched 6 files across extension backend (TypeScript), webview frontend (JS), and templates (HTML)"
    },
    "files_modified": "6",
    "files_touched": [
      "src/ext/providers/semntix-view/managers/ResourceManager.ts",
      "src/ui/templates/base.html",
      "src/ui/templates/components/user-input.html",
      "src/ui/templates/css/ui-user-input.css",
      "src/ui/modules/ui-logic/services/IconLoader.js",
      "src/ui/app/main.js"
    ],
    "tests_added": "0",
    "related_tasks": [
      "metallic-theme-complete-redesign",
      "chat-ui-metallic-transformation"
    ],
    "outcomes": {
      "performance_impact": "Minimal - filesystem scan runs once at webview initialization, ~1ms per icon",
      "test_coverage_delta": "0%",
      "technical_debt_reduced": "high",
      "follow_up_needed": "false"
    },
    "summary": "Manual icon URI injection requiring ResourceManager edits per icon → Automatic icon discovery system that scans assets/icons folder and makes all SVGs available via window.ICONS global object with zero configuration",
    "root_cause": "VS Code webview security requires vscode.asWebviewUri() for all assets, making it impossible to directly reference icon files without backend URI transformation",
    "solution": {
      "approach": "Backend auto-scan with frontend dynamic loading - ResourceManager scans icons directory at webview init, injects URIs as global JS object, IconLoader service automatically populates img[data-icon] elements",
      "key_changes": [
        "ResourceManager.ts: Added loadIconUris() method using fs.readdirSync to scan src/ui/assets/icons/, convert filenames to camelCase keys (send-button-icon.svg → sendButtonIcon), and generate webview URIs",
        "ResourceManager.ts: Modified injectResources() to accept iconUris parameter and inject as JSON into {{ICONS_JSON}} placeholder",
        "base.html: Added <script>window.ICONS = {{ICONS_JSON}};</script> in head to create global icon registry accessible to all components",
        "IconLoader.js: Created service with init() method that queries all img[data-icon] elements and populates src from window.ICONS",
        "user-input.html: Changed from hardcoded src={{SEND_ICON_URI}} to data-icon=\"sendButtonIcon\" attribute for dynamic loading",
        "ui-user-input.css: Added CSS filter to color SVG to match --accent-blue theme color with brightness adjustment on hover",
        "main.js: Added IconLoader.init() call at app startup before UIManager initialization"
      ]
    },
    "validation": "Dropped send-button-icon.svg into assets/icons/, reloaded extension, verified console logs show 'Loaded 1 icons: [sendButtonIcon]', confirmed send button displays SVG with proper blue coloring and hover effects, user independently added semantix.svg and used it in header without any backend changes",
    "gotchas": [
      {
        "issue": "VS Code webview security blocks direct file:// references to assets",
        "solution": "Must use webview.asWebviewUri() to convert file paths to secure vscode-webview:// URLs that pass Content Security Policy",
        "category": "environment",
        "severity": "high"
      },
      {
        "issue": "SVG fill colors don't respect CSS color property",
        "solution": "Use CSS filter property with brightness/saturate/invert/hue-rotate chain to approximate theme colors from any SVG fill",
        "category": "integration",
        "severity": "medium"
      },
      {
        "issue": "Icon loading must happen before components render to avoid empty img tags",
        "solution": "Call IconLoader.init() in main.js before UIManager.start() to ensure DOM is ready but before component initialization",
        "category": "integration",
        "severity": "medium"
      }
    ],
    "lesson": "Auto-discovery patterns with global registries eliminate configuration overhead - scanning filesystem once and injecting as window.GLOBAL makes assets available everywhere without per-use setup",
    "tags": [
      "icon-system",
      "asset-loading",
      "auto-discovery",
      "webview-security",
      "dynamic-loading",
      "filesystem-scan",
      "vscode-extension"
    ],
    "code_context": {
      "key_patterns": [
        "loadIconUris() - Filesystem scan pattern: fs.readdirSync() + filter + webview.asWebviewUri() transformation",
        "IconLoader.init() - DOM query pattern: querySelectorAll('[data-icon]') + attribute mapping to global registry",
        "Filename to camelCase - 'send-button-icon.svg'.split('-').map((part, i) => i === 0 ? part : capitalize(part)).join('')",
        "window.ICONS global registry - Central asset registry pattern for webview environment"
      ],
      "api_surface": [
        "ResourceManager.loadIconUris(): Record<string, vscode.Uri> - Scans icons directory and returns camelCase name → webview URI map",
        "IconLoader.init(): void - Auto-loads all img[data-icon] elements from window.ICONS registry",
        "IconLoader.getIcon(iconName: string): string|null - Programmatic icon URI lookup",
        "IconLoader.getAvailableIcons(): string[] - Returns all loaded icon names for debugging",
        "window.ICONS: Record<string, string> - Global icon registry injected by ResourceManager"
      ],
      "dependencies_added": [
        "fs: Built-in Node.js filesystem for directory scanning",
        "path: Built-in Node.js path utilities for directory joining"
      ],
      "breaking_changes": [
        "Icon references change from {{SEND_ICON_URI}} template placeholders to data-icon=\"iconName\" attributes",
        "ResourceManager.injectResources() signature changed to accept iconUris parameter"
      ]
    },
    "future_planning": {
      "next_logical_steps": [
        "Add IconLoader.loadDynamic(iconName, imgElement) for runtime icon injection in JS-created elements",
        "Create icon variants system (e.g., send-button-icon-filled.svg, send-button-icon-outline.svg)",
        "Add icon preloading cache to avoid URI lookup overhead on repeated access",
        "Create IconService wrapper with color theme support (auto-apply filters based on theme variables)",
        "Add icon fallback system for missing icons (default placeholder SVG)",
        "Implement icon sprite sheet generation for production builds to reduce HTTP requests"
      ],
      "architecture_decisions": {
        "global-window-object": "Chose window.ICONS over importing JS module because icons need to be available before ES modules load and across all components without import overhead",
        "data-attributes": "Used data-icon attribute instead of class-based selectors for semantic clarity and to avoid CSS class conflicts",
        "camelCase-naming": "Converted kebab-case filenames to camelCase JS keys for consistency with JavaScript conventions and easier dot notation access",
        "scan-at-init": "Filesystem scan at webview init rather than build-time bundling to support hot-reload during development without rebuild"
      },
      "extension_points": [
        "src/ui/assets/icons/ - Drop any .svg file here, filename becomes camelCase key automatically",
        "IconLoader.js - Add methods for icon variants, themes, or animation triggers",
        "ResourceManager.loadIconUris() - Extend to scan subdirectories for icon categories (e.g., icons/actions/, icons/status/)",
        "base.html window.ICONS - Could extend to window.ASSETS for other asset types (fonts, images, audio)"
      ]
    },
    "user_context": {
      "development_style": "rapid-prototype",
      "naming_preferences": "technical-precise",
      "architecture_philosophy": "single-responsibility",
      "quality_standards": "maintainability-focus"
    },
    "semantic_context": {
      "domain_concepts": [
        "asset-management",
        "icon-system",
        "design-system",
        "zero-config"
      ],
      "technical_patterns": [
        "auto-discovery",
        "filesystem-scanning",
        "global-registry",
        "data-attributes",
        "webview-security"
      ],
      "integration_points": [
        "vscode-webview",
        "resource-manager",
        "content-security-policy"
      ]
    }
  },
  "timestamp": "2025-09-30T14:51:47.162Z",
  "embeddingText": "auto-loading-icon-system Manual icon URI injection requiring ResourceManager edits per icon → Automatic icon discovery system that scans assets/icons folder and makes all SVGs available via window.ICONS global object with zero configuration VS Code webview security requires vscode.asWebviewUri() for all assets, making it impossible to directly reference icon files without backend URI transformation Backend auto-scan with frontend dynamic loading - ResourceManager scans icons directory at webview init, injects URIs as global JS object, IconLoader service automatically populates img[data-icon] elements ResourceManager.ts: Added loadIconUris() method using fs.readdirSync to scan src/ui/assets/icons/, convert filenames to camelCase keys (send-button-icon.svg → sendButtonIcon), and generate webview URIs ResourceManager.ts: Modified injectResources() to accept iconUris parameter and inject as JSON into {{ICONS_JSON}} placeholder base.html: Added <script>window.ICONS = {{ICONS_JSON}};</script> in head to create global icon registry accessible to all components IconLoader.js: Created service with init() method that queries all img[data-icon] elements and populates src from window.ICONS user-input.html: Changed from hardcoded src={{SEND_ICON_URI}} to data-icon=\"sendButtonIcon\" attribute for dynamic loading ui-user-input.css: Added CSS filter to color SVG to match --accent-blue theme color with brightness adjustment on hover main.js: Added IconLoader.init() call at app startup before UIManager initialization Auto-discovery patterns with global registries eliminate configuration overhead - scanning filesystem once and injecting as window.GLOBAL makes assets available everywhere without per-use setup VS Code webview security blocks direct file:// references to assets Must use webview.asWebviewUri() to convert file paths to secure vscode-webview:// URLs that pass Content Security Policy SVG fill colors don't respect CSS color property Use CSS filter property with brightness/saturate/invert/hue-rotate chain to approximate theme colors from any SVG fill Icon loading must happen before components render to avoid empty img tags Call IconLoader.init() in main.js before UIManager.start() to ensure DOM is ready but before component initialization icon-system asset-loading auto-discovery webview-security dynamic-loading filesystem-scan vscode-extension"
}