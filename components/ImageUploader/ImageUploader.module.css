/* Container styles */
.container {
  width: 100%;
  padding: 1rem 0;
}

/* Upload area styles */
.uploadArea {
  border: 2px dashed #e2e8f0;
  border-radius: 8px;
  padding: 2rem;
  text-align: center;
  margin-bottom: 1.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
  background-color: var(--bg-secondary);
}

.uploadArea:hover {
  border-color: #94a3b8;
  background-color: rgba(148, 163, 184, 0.05);
}

.uploadArea.dragging {
  border-color: #3b82f6;
  background-color: rgba(59, 130, 246, 0.05);
}

.uploadIcon {
  font-size: 2rem;
  color: #64748b;
  margin-bottom: 0.75rem;
}

.uploadText {
  font-size: 1rem;
  margin-bottom: 0.5rem;
  color: var(--color-text-primary);
}

.uploadInfo {
  font-size: 0.875rem;
  color: #64748b;
}

.fileInput {
  display: none;
}

/* Image grid styles */
.imageGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1rem;
  margin-top: 1rem;
  position: relative; /* Needed for absolute positioning during drag */
}

.imageGrid.horizontal {
  display: flex;
  flex-wrap: nowrap;
  gap: 1rem;
  overflow-x: auto;
  padding-bottom: 1rem;
}

/* Image item styles */
.imageItem {
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  background-color: var(--bg-secondary);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  transition: transform 0.15s ease, box-shadow 0.15s ease;
  height: 100%;
  display: flex;
  flex-direction: column;
  will-change: transform, opacity;
  touch-action: none;
}

.imageItem:hover {
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transform: translateY(-2px);
}

.imageItem.dragging {
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
  opacity: 0.8;
  z-index: 10;
  transform: scale(1.02); /* Slightly larger when dragging */
}

.horizontal .imageItem {
  min-width: 220px;
  max-width: 220px;
}

.imageContainer {
  position: relative;
  width: 100%;
  height: 180px;
  background-color: #f8fafc;
  transition: all 0.15s ease;
  user-select: none;
}

.dragHandle {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  cursor: grab;
}

.dragHandle:active {
  cursor: grabbing;
}

/* Delete button positioned on the right center */
.deleteButton {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background-color: rgba(51, 65, 85, 0.8); /* Slate-700 with opacity */
  color: white;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 20;
  transition: transform 0.2s ease, opacity 0.2s ease, background-color 0.2s ease;
  opacity: 0;
}

/* Show delete button on hover and when item has hovering class */
.imageContainer:hover .deleteButton,
.hovering .deleteButton {
  opacity: 1;
}

.deleteButton:hover {
  transform: translateY(-50%) scale(1.1);
  background-color: rgba(239, 68, 68, 0.9); /* Red color on hover */
}

.deleteButton:active {
  transform: translateY(-50%) scale(0.95);
  background-color: rgba(185, 28, 28, 0.9); /* Darker red when clicked */
}

/* Helper text styles */
.helperText {
  text-align: center;
  margin-bottom: 10px;
  color: #64748b;
  font-size: 0.875rem;
  background-color: rgba(59, 130, 246, 0.1);
  padding: 6px 12px;
  border-radius: 4px;
}

/* Add a visible "handle" to make it clear items are draggable */
.imageContainer::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 24px;
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.5) 0%,
    rgba(0, 0, 0, 0) 100%
  );
  opacity: 0.6;
  z-index: 2;
  transition: opacity 0.2s ease;
  pointer-events: none;
}

.imageContainer:hover::before {
  opacity: 0.8;
}

/* Drag handle icon */
.imageContainer::after {
  content: "";
  position: absolute;
  top: 6px;
  left: 50%;
  transform: translateX(-50%);
  width: 40px;
  height: 12px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='12' viewBox='0 0 40 12' fill='%23FFFFFF'%3E%3Ccircle cx='6' cy='6' r='2'/%3E%3Ccircle cx='16' cy='6' r='2'/%3E%3Ccircle cx='26' cy='6' r='2'/%3E%3Ccircle cx='36' cy='6' r='2'/%3E%3C/svg%3E");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  opacity: 0.9;
  z-index: 3;
  pointer-events: none;
}

.imageContainer:active {
  cursor: grabbing;
  background-color: rgba(59, 130, 246, 0.05);
}

/* Helper message for dragging */
.imageGrid::before {
  content: "Drag to reorder images";
  display: block;
  width: 100%;
  text-align: center;
  font-size: 0.875rem;
  color: #64748b;
  margin-bottom: 0.75rem;
  padding: 0.5rem;
  background-color: rgba(59, 130, 246, 0.1);
  border-radius: 4px;
}

/* Image and video styles */
.image {
  object-fit: cover;
  transition: opacity 0.2s ease;
}

.video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: contain; /* Changed from cover to better fit videos */
  background-color: #000;
  z-index: 10; /* Add z-index to make sure video is visible */
}

/* Video styles */
.videoWrapper {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #000;
  z-index: 5;
}

.videoPlayButton {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 50px;
  height: 50px;
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  cursor: pointer;
  border: 2px solid rgba(255, 255, 255, 0.7);
  transition: all 0.3s ease;
  z-index: 3;
  opacity: 1;
}

.videoWrapper:hover .videoPlayButton {
  opacity: 1;
}

.videoPlayButton:hover {
  transform: translate(-50%, -50%) scale(1.1);
  background-color: rgba(0, 0, 0, 0.8);
  border-color: white;
}

.videoPlayButton.fadeOut {
  opacity: 0;
}

.videoWrapper.playing:hover .videoPlayButton.fadeOut {
  opacity: 0.6;
}

.videoDuration {
  position: absolute;
  bottom: 10px;
  right: 10px;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 0.75rem;
  display: flex;
  align-items: center;
  gap: 5px;
  z-index: 3;
}

.videoDuration svg {
  opacity: 0.7;
}

/* Video loading spinner */
.videoLoading {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.4);
  z-index: 4;
}

.spinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Drag overlay styles */
.dragOverlay {
  z-index: 999;
}

.overlayItem {
  transform: scale(1.05);
  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
  opacity: 0.9;
  pointer-events: none;
  cursor: grabbing;
  border: 2px solid #3b82f6; /* Highlight border */
  animation: pulse 1.5s infinite; /* Pulse animation */
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.5);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
  }
}

.ghostControls {
  height: 45px; /* Match the height of the real controls */
  background-color: rgba(255, 255, 255, 0.1); /* Subtle ghost appearance */
}

/* Animation for item shifting during sort */
@keyframes shiftAnimation {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(10px);
  }
  100% {
    transform: translateX(0);
  }
}

.sortableItem {
  transition: transform 0.25s cubic-bezier(0.25, 1, 0.5, 1);
}

/* Controls styles */
.controls {
  display: flex;
  justify-content: space-between;
  padding: 0.75rem;
  background-color: var(--bg-tertiary);
  border-top: 1px solid rgba(226, 232, 240, 0.5);
}

.editButton,
.removeButton,
.mainButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 4px;
  transition: background-color 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.editButton {
  color: #0ea5e9;
}

.mainButton {
  color: #eab308;
  font-size: 0.75rem;
  padding: 0.25rem 0.5rem;
  background-color: rgba(234, 179, 8, 0.1);
  border: 1px solid rgba(234, 179, 8, 0.2);
  margin-left: 0.5rem;
}

.removeButton {
  color: #ef4444;
}

.editButton:hover,
.mainButton:hover,
.removeButton:hover {
  background-color: rgba(241, 245, 249, 0.5);
}

.mainButton:hover {
  background-color: rgba(234, 179, 8, 0.2);
}

/* Edit form styles */
.editForm {
  width: 100%;
  padding: 0.5rem 0;
}

.altTextInput {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid #e2e8f0;
  border-radius: 4px;
  font-size: 0.875rem;
  margin-bottom: 0.5rem;
  background-color: var(--bg-accent);
  color: var(--color-text-primary);
}

.editButtons {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 0.5rem;
}

.cancelButton,
.saveButton {
  padding: 0.25rem 0.75rem;
  border-radius: 4px;
  font-size: 0.75rem;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.cancelButton {
  background-color: transparent;
  border: 1px solid #e2e8f0;
  color: var(--color-text-secondary);
}

.saveButton {
  background-color: #3b82f6;
  border: 1px solid #3b82f6;
  color: white;
}

.cancelButton:hover {
  background-color: #f1f5f9;
}

.saveButton:hover {
  background-color: #2563eb;
}

/* Main badge styles */
.mainBadge {
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
  background-color: #3b82f6;
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: 500;
  z-index: 2;
}

/* Empty state styles */
.emptyState {
  text-align: center;
  padding: 3rem 1rem;
  background-color: var(--bg-secondary);
  border-radius: 8px;
  color: #64748b;
}

.emptyIcon {
  margin-bottom: 1rem;
  opacity: 0.5;
}

/* Uploading indicator */
.uploadingIndicator {
  text-align: center;
  padding: 1rem;
  background-color: rgba(59, 130, 246, 0.1);
  border-radius: 8px;
  margin-bottom: 1rem;
}

/* Responsive styles */
@media (max-width: 640px) {
  .imageGrid {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  }

  .imageContainer {
    height: 120px;
  }

  .horizontal .imageItem {
    min-width: 150px;
    max-width: 150px;
  }

  .uploadArea {
    padding: 1.5rem 1rem;
  }
}

/* Add styles for main image */
.mainImage {
  border: 2px solid #3b82f6;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3);
}

.mainImage .imageContainer {
  cursor: default;
}

.mainImage .imageContainer:hover {
  box-shadow: 0 0 15px rgba(59, 130, 246, 0.5);
}

/* Clickable for main image indicator */
.clickableForMain {
  cursor: pointer;
}

.clickableForMain:hover::before {
  content: "Set as main";
  position: absolute;
  top: 10px;
  left: 10px;
  background-color: rgba(59, 130, 246, 0.9);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 0.75rem;
  z-index: 10;
  pointer-events: none;
}

/* Video specific styles */
.videoItem {
  background-color: #000;
}

.videoIndicator {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: rgba(239, 68, 68, 0.8);
  color: white;
  padding: 6px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 15;
  font-size: 16px;
  border: 2px solid white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.videoItem .imageContainer {
  background-color: #000;
  position: relative;
}

/* Screen reader only text - visible to screen readers but hidden visually */
.srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* Tooltip for edit button */
.tooltipText {
  position: absolute;
  bottom: -30px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(51, 65, 85, 0.9);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 0.75rem;
  white-space: nowrap;
  opacity: 0;
  visibility: hidden;
  transition: all 0.2s ease;
  z-index: 30;
}

.tooltipText::before {
  content: "";
  position: absolute;
  top: -5px;
  left: 50%;
  transform: translateX(-50%);
  border-width: 0 5px 5px 5px;
  border-style: solid;
  border-color: transparent transparent rgba(51, 65, 85, 0.9) transparent;
}

.editButton:hover .tooltipText {
  opacity: 1;
  visibility: visible;
}

/* Hovering state */
.hovering {
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
}

/* Focus styles for better keyboard navigation */
.altTextInput:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.editButton:focus,
.deleteButton:focus,
.cancelButton:focus,
.saveButton:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}
