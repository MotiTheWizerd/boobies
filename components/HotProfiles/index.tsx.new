"use client";

import React, { useState } from "react";
import { FaFire } from "react-icons/fa";
import HotProfilesGallery from "./HotProfilesGallery";
import Image from "next/image";
import { useHotProfiles } from "@/app/hooks/useHotProfiles";
import type { HotProfileProps } from "./HotProfileCard";
import ImageGalleryModal, { GalleryItem } from "../Common/Modal/ImageGalleryModal";

interface CardGallerySectionProps {
  title: string;
  icon?: React.ReactNode | string;
  GalleryList: React.ComponentType<{ onMediaClick: (item: GalleryItem, profileIndex: number) => void }>;
}

const CardGallerySection: React.FC<CardGallerySectionProps> = ({
  title,
  icon,
  GalleryList,
}) => {
  const renderIcon = () => {
    if (!icon) return null;
    if (typeof icon === "string") {
      return (
        <Image
          src={icon}
          alt={title + " icon"}
          width={24}
          height={24}
          className="inline-block"
        />
      );
    }
    return icon;
  };

  return (
    <div className="py-2">
      <h2 className="section-header text-2xl font-bold flex items-center flex-row-reverse gap-2 text-right justify-end text-gray-900 dark:text-gray-100">
        {renderIcon()}
        <span>{title}</span>
      </h2>
      <div className="mt-3">
        <GalleryList onMediaClick={(item, index) => onMediaClick(item, index)} />
      </div>
    </div>
  );
};

const HotProfiles = () => {
  const { profiles } = useHotProfiles();
  const [selectedProfileIndex, setSelectedProfileIndex] = useState(0);
  const [selectedMediaIndex, setSelectedMediaIndex] = useState(0);
  const [isGalleryOpen, setIsGalleryOpen] = useState(false);

  // Get gallery items for the selected profile only
  const getProfileGalleryItems = (profile: HotProfileProps): GalleryItem[] => {
    if (profile.media && profile.media.length > 0) {
      return profile.media.map((item: { url: string; fileType?: string }) => ({
        url: item.url,
        type: item.fileType?.startsWith("video/") ? ("video" as const) : ("image" as const),
        altText: profile.name,
      }));
    }
    return [{
      url: profile.imageUrl,
      type: "image" as const,
      altText: profile.name,
    }];
  };

  const selectedProfile = profiles[selectedProfileIndex];
  const galleryItems = selectedProfile ? getProfileGalleryItems(selectedProfile) : [];

  const handleMediaClick = (item: GalleryItem, profileIndex: number) => {
    setSelectedProfileIndex(profileIndex);
    
    // Find the media index within the profile's media items
    const profile = profiles[profileIndex];
    if (!profile) return;

    const mediaItems = profile.media && profile.media.length > 0
      ? profile.media
      : [{ url: profile.imageUrl, fileType: "image/jpeg" }];
    
    const mediaIndex = mediaItems.findIndex((media: { url: string }) => 
      media.url === item.url
    );
    
    setSelectedMediaIndex(Math.max(0, mediaIndex));
    setIsGalleryOpen(true);
  };

  return (
    <div>
      <CardGallerySection
        title="חם בלעדי"
        icon={<FaFire className="fire-icon text-amber-500" />}
        GalleryList={(props) => <HotProfilesGallery {...props} />}
      />
      <ImageGalleryModal
        isOpen={isGalleryOpen}
        onClose={() => setIsGalleryOpen(false)}
        items={galleryItems}
        initialIndex={selectedMediaIndex}
      />
    </div>
  );
};

export default HotProfiles;
export { CardGallerySection };
