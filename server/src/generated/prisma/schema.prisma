// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  name      String?
  last      String?
  password  String
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id        String     @id @default(uuid())
  name      String
  title     String
  mobile    String?
  email     String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  campaigns Campaign[]
}

model Campaign {
  id            String   @id @default(uuid())
  campaign_name String
  client        Client   @relation(fields: [clientId], references: [id])
  clientId      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  ads           Ad[]
}

model Ad {
  id          String   @id @default(uuid())
  name        String
  imageUrl    String
  isHappyHour Boolean  @default(false)
  isHot       Boolean  @default(false)
  isPremium   Boolean  @default(false)
  likesCount  Int      @default(0)
  viewsCount  Int      @default(0)
  priority    Boolean  @default(false)
  campaign    Campaign @relation(fields: [campaignId], references: [id])
  campaignId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
